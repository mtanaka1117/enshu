from adaptiveleak.utils.message import decode_standard_measurements

encoded = b'\x5f\x22\x22\x62\x89\x88\x00\x6c\xa1\xb6\x76\x44\x84\x87\x87\x50\x8d\x3d\x82\x6c\xa1\xb6\x76\x44\x84\x6b\x7e\x6e\x80\x44\x7f\x89\xa2\xe4\x74\x22\x84\xd5\x89\x3e\x9d\x3b\x7b\x83\x9f\x0b\x78\xde\x83\x49\x82\x79\x89\x76\x7f\x06\x9f\x33\x77\x2e\x84\x90\x7e\x2b\x89\x20\x7e\xc7\x9d\xb0\x77\x3f\x85\xcd\x80\x6e\x80\x2b\x80\x17\xa0\x9a\x77\xf5\x83\xbd\x81\x0b\x82\xdf\x7f\x2e\xa0\x06\x77\xb6\x84\x4f\x81\x5e\x81\x32\x80\x11\x9f\x4a\x79\x6c\x85\x88\x7f\xba\x82\xe4\x7f\x00\xa0\x39\x78\x50\x84\x6f\x7f\x7c\x81\x31\x81\x50\x9e\xc7\x77\x6c\x85\x38\x82\x55\x77\xa2\x81\x94\xa0\x39\x76\x89\x84\x24\x7c\xc2\x82\xe1\x80\x77\x9f\x61\x77\x5b\x84\x12\x7c\x42\x7b\x0e\x81\x11\xa1\xe4\x76\xa5\x83\x5e\x81\xad\x80\x3f\x80\x17\x9e\xb0\x77\xde\x83\x55\x83\x0b\x7b\x2a\x81\x94\xa0\xd2\x77\xe9\x83\x85\x7f\x9e\x86\x81\x81\x77\x9f\x33\x77\x72\x84\x94\x7f\xd8\x7f\xd8\x7f\xf5\x9f\x11\x77\xbc\x83\x8c\x83\x17\x80\x85\x80'

decoded, idx, _ = decode_standard_measurements(byte_str=encoded,
                                       seq_length=50,
                                       num_features=6,
                                       width=16,
                                       precision=13,
                                       should_compress=False)

print(decoded.T.reshape(-1, 6))

